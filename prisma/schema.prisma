generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model alternative_medium {
  id                  Int     @id @default(autoincrement())
  medium              Int
  alternative_release Int
  name                String? @db.VarChar

  @@index([alternative_release], map: "alternative_medium_idx_alternative_release")
}

model alternative_medium_track {
  alternative_medium Int
  track              Int
  alternative_track  Int

  @@id([alternative_medium, track])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model alternative_release {
  id            Int     @id @default(autoincrement())
  gid           String  @unique(map: "alternative_release_idx_gid") @db.Uuid
  release       Int
  name          String? @db.VarChar
  artist_credit Int?
  type          Int
  language      Int
  script        Int
  comment       String  @default("") @db.VarChar(255)

  @@index([artist_credit], map: "alternative_release_idx_artist_credit")
  @@index([language, script], map: "alternative_release_idx_language_script")
  @@index([name], map: "alternative_release_idx_name")
  @@index([release], map: "alternative_release_idx_release")
}

model alternative_release_type {
  id          Int     @id @default(autoincrement())
  name        String
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @db.Uuid
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model alternative_track {
  id            Int     @id @default(autoincrement())
  name          String? @db.VarChar
  artist_credit Int?
  ref_count     Int     @default(0)

  @@index([artist_credit], map: "alternative_track_idx_artist_credit")
  @@index([name], map: "alternative_track_idx_name")
}

model annotation {
  id        Int       @id @default(autoincrement())
  editor    Int
  text      String?
  changelog String?   @db.VarChar(255)
  created   DateTime? @default(now()) @db.Timestamptz(6)
}

model application {
  id                 Int     @id @default(autoincrement())
  owner              Int
  name               String
  oauth_id           String  @unique(map: "application_idx_oauth_id")
  oauth_secret       String
  oauth_redirect_uri String?

  @@index([owner], map: "application_idx_owner")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model area {
  id               Int       @id @default(autoincrement())
  gid              String    @unique(map: "area_idx_gid") @db.Uuid
  name             String    @db.VarChar
  type             Int?
  edits_pending    Int       @default(0)
  last_updated     DateTime? @default(now()) @db.Timestamptz(6)
  begin_date_year  Int?      @db.SmallInt
  begin_date_month Int?      @db.SmallInt
  begin_date_day   Int?      @db.SmallInt
  end_date_year    Int?      @db.SmallInt
  end_date_month   Int?      @db.SmallInt
  end_date_day     Int?      @db.SmallInt
  ended            Boolean   @default(false)
  comment          String    @default("") @db.VarChar(255)

  @@index([name], map: "area_idx_name")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model area_alias {
  id                 Int       @id @default(autoincrement())
  area               Int
  name               String    @db.VarChar
  locale             String?
  edits_pending      Int       @default(0)
  last_updated       DateTime? @default(now()) @db.Timestamptz(6)
  type               Int?
  sort_name          String    @db.VarChar
  begin_date_year    Int?      @db.SmallInt
  begin_date_month   Int?      @db.SmallInt
  begin_date_day     Int?      @db.SmallInt
  end_date_year      Int?      @db.SmallInt
  end_date_month     Int?      @db.SmallInt
  end_date_day       Int?      @db.SmallInt
  primary_for_locale Boolean   @default(false)
  ended              Boolean   @default(false)

  @@index([area], map: "area_alias_idx_area")
}

model area_alias_type {
  id          Int     @id @default(autoincrement())
  name        String
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "area_alias_type_idx_gid") @db.Uuid
}

model area_annotation {
  area       Int
  annotation Int

  @@id([area, annotation])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model area_attribute {
  id                                Int     @id @default(autoincrement())
  area                              Int
  area_attribute_type               Int
  area_attribute_type_allowed_value Int?
  area_attribute_text               String?

  @@index([area], map: "area_attribute_idx_area")
}

model area_attribute_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  comment     String  @default("") @db.VarChar(255)
  free_text   Boolean
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "area_attribute_type_idx_gid") @db.Uuid
}

model area_attribute_type_allowed_value {
  id                  Int     @id @default(autoincrement())
  area_attribute_type Int
  value               String?
  parent              Int?
  child_order         Int     @default(0)
  description         String?
  gid                 String  @unique(map: "area_attribute_type_allowed_value_idx_gid") @db.Uuid

  @@index([area_attribute_type], map: "area_attribute_type_allowed_value_idx_name")
}

model area_containment {
  descendant Int
  parent     Int
  depth      Int @db.SmallInt

  @@id([descendant, parent])
  @@index([parent], map: "area_containment_idx_parent")
}

model area_gid_redirect {
  gid     String    @id @db.Uuid
  new_id  Int
  created DateTime? @default(now()) @db.Timestamptz(6)

  @@index([new_id], map: "area_gid_redirect_idx_new_id")
}

model area_tag {
  area         Int
  tag          Int
  count        Int
  last_updated DateTime? @default(now()) @db.Timestamptz(6)

  @@id([area, tag])
  @@index([tag], map: "area_tag_idx_tag")
}

model area_tag_raw {
  area      Int
  editor    Int
  tag       Int
  is_upvote Boolean @default(true)

  @@id([area, editor, tag])
  @@index([area], map: "area_tag_raw_idx_area")
  @@index([editor], map: "area_tag_raw_idx_editor")
  @@index([tag], map: "area_tag_raw_idx_tag")
}

model area_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "area_type_idx_gid") @db.Uuid
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model artist {
  id               Int       @id @default(autoincrement())
  gid              String    @unique(map: "artist_idx_gid") @db.Uuid
  name             String    @db.VarChar
  sort_name        String    @db.VarChar
  begin_date_year  Int?      @db.SmallInt
  begin_date_month Int?      @db.SmallInt
  begin_date_day   Int?      @db.SmallInt
  end_date_year    Int?      @db.SmallInt
  end_date_month   Int?      @db.SmallInt
  end_date_day     Int?      @db.SmallInt
  type             Int?
  area             Int?
  gender           Int?
  comment          String    @default("") @db.VarChar(255)
  edits_pending    Int       @default(0)
  last_updated     DateTime? @default(now()) @db.Timestamptz(6)
  ended            Boolean   @default(false)
  begin_area       Int?
  end_area         Int?

  @@index([area], map: "artist_idx_area")
  @@index([begin_area], map: "artist_idx_begin_area")
  @@index([end_area], map: "artist_idx_end_area")
  @@index([name], map: "artist_idx_musicbrainz_collate")
  @@index([name], map: "artist_idx_name")
  @@index([sort_name], map: "artist_idx_sort_name")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model artist_alias {
  id                 Int       @id @default(autoincrement())
  artist             Int
  name               String    @db.VarChar
  locale             String?
  edits_pending      Int       @default(0)
  last_updated       DateTime? @default(now()) @db.Timestamptz(6)
  type               Int?
  sort_name          String    @db.VarChar
  begin_date_year    Int?      @db.SmallInt
  begin_date_month   Int?      @db.SmallInt
  begin_date_day     Int?      @db.SmallInt
  end_date_year      Int?      @db.SmallInt
  end_date_month     Int?      @db.SmallInt
  end_date_day       Int?      @db.SmallInt
  primary_for_locale Boolean   @default(false)
  ended              Boolean   @default(false)

  @@index([artist], map: "artist_alias_idx_artist")
}

model artist_alias_type {
  id          Int     @id @default(autoincrement())
  name        String
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "artist_alias_type_idx_gid") @db.Uuid
}

model artist_annotation {
  artist     Int
  annotation Int

  @@id([artist, annotation])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model artist_attribute {
  id                                  Int     @id @default(autoincrement())
  artist                              Int
  artist_attribute_type               Int
  artist_attribute_type_allowed_value Int?
  artist_attribute_text               String?

  @@index([artist], map: "artist_attribute_idx_artist")
}

model artist_attribute_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  comment     String  @default("") @db.VarChar(255)
  free_text   Boolean
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "artist_attribute_type_idx_gid") @db.Uuid
}

model artist_attribute_type_allowed_value {
  id                    Int     @id @default(autoincrement())
  artist_attribute_type Int
  value                 String?
  parent                Int?
  child_order           Int     @default(0)
  description           String?
  gid                   String  @unique(map: "artist_attribute_type_allowed_value_idx_gid") @db.Uuid

  @@index([artist_attribute_type], map: "artist_attribute_type_allowed_value_idx_name")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model artist_credit {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar
  artist_count  Int       @db.SmallInt
  ref_count     Int?      @default(0)
  created       DateTime? @default(now()) @db.Timestamptz(6)
  edits_pending Int       @default(0)
  gid           String    @unique(map: "artist_credit_idx_gid") @db.Uuid

  @@index([name], map: "artist_credit_idx_musicbrainz_collate")
}

model artist_credit_gid_redirect {
  gid     String    @id @db.Uuid
  new_id  Int
  created DateTime? @default(now()) @db.Timestamptz(6)

  @@index([new_id], map: "artist_credit_gid_redirect_idx_new_id")
}

model artist_credit_name {
  artist_credit Int
  position      Int    @db.SmallInt
  artist        Int
  name          String @db.VarChar
  join_phrase   String @default("")

  @@id([artist_credit, position])
  @@index([artist], map: "artist_credit_name_idx_artist")
  @@index([name], map: "artist_credit_name_idx_musicbrainz_collate")
}

model artist_gid_redirect {
  gid     String    @id @db.Uuid
  new_id  Int
  created DateTime? @default(now()) @db.Timestamptz(6)

  @@index([new_id], map: "artist_gid_redirect_idx_new_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model artist_ipi {
  artist        Int
  ipi           String    @db.Char(11)
  edits_pending Int       @default(0)
  created       DateTime? @default(now()) @db.Timestamptz(6)

  @@id([artist, ipi])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model artist_isni {
  artist        Int
  isni          String    @db.Char(16)
  edits_pending Int       @default(0)
  created       DateTime? @default(now()) @db.Timestamptz(6)

  @@id([artist, isni])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model artist_meta {
  id           Int  @id
  rating       Int? @db.SmallInt
  rating_count Int?
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model artist_rating_raw {
  artist Int
  editor Int
  rating Int @db.SmallInt

  @@id([artist, editor])
  @@index([editor], map: "artist_rating_raw_idx_editor")
}

/// This table is a partition table and requires additional setup for migrations. Visit https://pris.ly/d/partition-tables for more info.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model artist_release {
  is_track_artist    Boolean
  artist             Int
  first_release_date Int?
  catalog_numbers    String[]
  country_code       String?  @db.Char(2)
  barcode            BigInt?
  sort_character     String   @db.Char(1)
  release            Int

  @@ignore
}

/// This table is a partition table and requires additional setup for migrations. Visit https://pris.ly/d/partition-tables for more info.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model artist_release_group {
  is_track_artist    Boolean
  artist             Int
  unofficial         Boolean
  primary_type       Int?    @db.SmallInt
  secondary_types    Int[]   @db.SmallInt
  first_release_date Int?
  sort_character     String  @db.Char(1)
  release_group      Int

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model artist_release_group_pending_update {
  release_group Int

  @@index([release_group], map: "artist_release_group_pending_update_idx_release_group", type: Hash)
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model artist_release_pending_update {
  release Int

  @@index([release], map: "artist_release_pending_update_idx_release", type: Hash)
  @@ignore
}

model artist_tag {
  artist       Int
  tag          Int
  count        Int
  last_updated DateTime? @default(now()) @db.Timestamptz(6)

  @@id([artist, tag])
  @@index([tag], map: "artist_tag_idx_tag")
}

model artist_tag_raw {
  artist    Int
  editor    Int
  tag       Int
  is_upvote Boolean @default(true)

  @@id([artist, editor, tag])
  @@index([editor], map: "artist_tag_raw_idx_editor")
  @@index([tag], map: "artist_tag_raw_idx_tag")
}

model artist_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "artist_type_idx_gid") @db.Uuid
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model autoeditor_election {
  id           Int       @id @default(autoincrement())
  candidate    Int
  proposer     Int
  seconder_1   Int?
  seconder_2   Int?
  status       Int       @default(1)
  yes_votes    Int       @default(0)
  no_votes     Int       @default(0)
  propose_time DateTime  @default(now()) @db.Timestamptz(6)
  open_time    DateTime? @db.Timestamptz(6)
  close_time   DateTime? @db.Timestamptz(6)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model autoeditor_election_vote {
  id                  Int      @id @default(autoincrement())
  autoeditor_election Int
  voter               Int
  vote                Int
  vote_time           DateTime @default(now()) @db.Timestamptz(6)
}

model cdtoc {
  id             Int       @id @default(autoincrement())
  discid         String    @unique(map: "cdtoc_idx_discid") @db.Char(28)
  freedb_id      String    @db.Char(8)
  track_count    Int
  leadout_offset Int
  track_offset   Int[]
  created        DateTime? @default(now()) @db.Timestamptz(6)

  @@index([freedb_id], map: "cdtoc_idx_freedb_id")
}

model cdtoc_raw {
  id             Int    @id @default(autoincrement())
  release        Int
  discid         String @db.Char(28)
  track_count    Int
  leadout_offset Int
  track_offset   Int[]

  @@unique([track_count, leadout_offset, track_offset], map: "cdtoc_raw_toc")
  @@index([discid], map: "cdtoc_raw_discid")
}

model country_area {
  area Int @id
}

model deleted_entity {
  gid        String   @id @db.Uuid
  data       Json
  deleted_at DateTime @default(now()) @db.Timestamptz(6)
}

model edit {
  id          Int       @id @default(autoincrement())
  editor      Int
  type        Int       @db.SmallInt
  status      Int       @db.SmallInt
  autoedit    Int       @default(0) @db.SmallInt
  open_time   DateTime? @default(now()) @db.Timestamptz(6)
  close_time  DateTime? @db.Timestamptz(6)
  expire_time DateTime  @db.Timestamptz(6)
  language    Int?
  quality     Int       @default(1) @db.SmallInt

  @@index([close_time], map: "edit_idx_close_time", type: Brin)
  @@index([editor, id(sort: Desc)], map: "edit_idx_editor_id_desc")
  @@index([editor, open_time], map: "edit_idx_editor_open_time")
  @@index([expire_time], map: "edit_idx_expire_time", type: Brin)
  @@index([open_time], map: "edit_idx_open_time", type: Brin)
  @@index([type, id], map: "edit_idx_type_id")
}

model edit_area {
  edit Int
  area Int

  @@id([edit, area])
  @@index([area], map: "edit_area_idx")
}

model edit_artist {
  edit   Int
  artist Int
  status Int @db.SmallInt

  @@id([edit, artist])
  @@index([artist], map: "edit_artist_idx")
  @@index([status], map: "edit_artist_idx_status")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model edit_data {
  edit Int  @id
  data Json
}

model edit_event {
  edit  Int
  event Int

  @@id([edit, event])
  @@index([event], map: "edit_event_idx")
}

model edit_genre {
  edit  Int
  genre Int

  @@id([edit, genre])
  @@index([genre], map: "edit_genre_idx")
}

model edit_instrument {
  edit       Int
  instrument Int

  @@id([edit, instrument])
  @@index([instrument], map: "edit_instrument_idx")
}

model edit_label {
  edit   Int
  label  Int
  status Int @db.SmallInt

  @@id([edit, label])
  @@index([label], map: "edit_label_idx")
  @@index([status], map: "edit_label_idx_status")
}

model edit_mood {
  edit Int
  mood Int

  @@id([edit, mood])
  @@index([mood], map: "edit_mood_idx")
}

model edit_note {
  id        Int       @id @default(autoincrement())
  editor    Int
  edit      Int
  text      String
  post_time DateTime? @default(now()) @db.Timestamptz(6)

  @@index([edit], map: "edit_note_idx_edit")
  @@index([editor], map: "edit_note_idx_editor")
}

model edit_note_change {
  id            Int               @id @default(autoincrement())
  status        edit_note_status?
  edit_note     Int
  change_editor Int
  change_time   DateTime?         @default(now()) @db.Timestamptz(6)
  old_note      String
  new_note      String
  reason        String            @default("")

  @@index([edit_note], map: "edit_note_change_idx_edit_note")
}

model edit_note_recipient {
  recipient Int
  edit_note Int

  @@id([recipient, edit_note])
  @@index([recipient], map: "edit_note_recipient_idx_recipient")
}

model edit_place {
  edit  Int
  place Int

  @@id([edit, place])
  @@index([place], map: "edit_place_idx")
}

model edit_recording {
  edit      Int
  recording Int

  @@id([edit, recording])
  @@index([recording], map: "edit_recording_idx")
}

model edit_release {
  edit    Int
  release Int

  @@id([edit, release])
  @@index([release], map: "edit_release_idx")
}

model edit_release_group {
  edit          Int
  release_group Int

  @@id([edit, release_group])
  @@index([release_group], map: "edit_release_group_idx")
}

model edit_series {
  edit   Int
  series Int

  @@id([edit, series])
  @@index([series], map: "edit_series_idx")
}

model edit_url {
  edit Int
  url  Int

  @@id([edit, url])
  @@index([url], map: "edit_url_idx")
}

model edit_work {
  edit Int
  work Int

  @@id([edit, work])
  @@index([work], map: "edit_work_idx")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model editor {
  id                 Int       @id @default(autoincrement())
  name               String    @db.VarChar(64)
  privs              Int?      @default(0)
  email              String?   @db.VarChar(64)
  website            String?   @db.VarChar(255)
  bio                String?
  member_since       DateTime? @default(now()) @db.Timestamptz(6)
  email_confirm_date DateTime? @db.Timestamptz(6)
  last_login_date    DateTime? @default(now()) @db.Timestamptz(6)
  last_updated       DateTime? @default(now()) @db.Timestamptz(6)
  birth_date         DateTime? @db.Date
  gender             Int?
  area               Int?
  password           String    @db.VarChar(128)
  ha1                String    @db.Char(32)
  deleted            Boolean   @default(false)
}

model editor_collection {
  id          Int     @id @default(autoincrement())
  gid         String  @unique(map: "editor_collection_idx_gid") @db.Uuid
  editor      Int
  name        String  @db.VarChar
  public      Boolean @default(false)
  description String  @default("")
  type        Int

  @@index([editor], map: "editor_collection_idx_editor")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model editor_collection_area {
  collection Int
  area       Int
  added      DateTime? @default(now()) @db.Timestamptz(6)
  position   Int       @default(0)
  comment    String    @default("")

  @@id([collection, area])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model editor_collection_artist {
  collection Int
  artist     Int
  added      DateTime? @default(now()) @db.Timestamptz(6)
  position   Int       @default(0)
  comment    String    @default("")

  @@id([collection, artist])
}

model editor_collection_collaborator {
  collection Int
  editor     Int

  @@id([collection, editor])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model editor_collection_deleted_entity {
  collection Int
  gid        String    @db.Uuid
  added      DateTime? @default(now()) @db.Timestamptz(6)
  position   Int       @default(0)
  comment    String    @default("")

  @@id([collection, gid])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model editor_collection_event {
  collection Int
  event      Int
  added      DateTime? @default(now()) @db.Timestamptz(6)
  position   Int       @default(0)
  comment    String    @default("")

  @@id([collection, event])
}

model editor_collection_gid_redirect {
  gid     String    @id @db.Uuid
  new_id  Int
  created DateTime? @default(now()) @db.Timestamptz(6)

  @@index([new_id], map: "editor_collection_gid_redirect_idx_new_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model editor_collection_instrument {
  collection Int
  instrument Int
  added      DateTime? @default(now()) @db.Timestamptz(6)
  position   Int       @default(0)
  comment    String    @default("")

  @@id([collection, instrument])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model editor_collection_label {
  collection Int
  label      Int
  added      DateTime? @default(now()) @db.Timestamptz(6)
  position   Int       @default(0)
  comment    String    @default("")

  @@id([collection, label])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model editor_collection_place {
  collection Int
  place      Int
  added      DateTime? @default(now()) @db.Timestamptz(6)
  position   Int       @default(0)
  comment    String    @default("")

  @@id([collection, place])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model editor_collection_recording {
  collection Int
  recording  Int
  added      DateTime? @default(now()) @db.Timestamptz(6)
  position   Int       @default(0)
  comment    String    @default("")

  @@id([collection, recording])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model editor_collection_release {
  collection Int
  release    Int
  added      DateTime? @default(now()) @db.Timestamptz(6)
  position   Int       @default(0)
  comment    String    @default("")

  @@id([collection, release])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model editor_collection_release_group {
  collection    Int
  release_group Int
  added         DateTime? @default(now()) @db.Timestamptz(6)
  position      Int       @default(0)
  comment       String    @default("")

  @@id([collection, release_group])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model editor_collection_series {
  collection Int
  series     Int
  added      DateTime? @default(now()) @db.Timestamptz(6)
  position   Int       @default(0)
  comment    String    @default("")

  @@id([collection, series])
}

model editor_collection_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  entity_type String  @db.VarChar(50)
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "editor_collection_type_idx_gid") @db.Uuid
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model editor_collection_work {
  collection Int
  work       Int
  added      DateTime? @default(now()) @db.Timestamptz(6)
  position   Int       @default(0)
  comment    String    @default("")

  @@id([collection, work])
}

model editor_language {
  editor   Int
  language Int
  fluency  fluency

  @@id([editor, language])
  @@index([language], map: "editor_language_idx_language")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model editor_oauth_token {
  id                    Int                          @id @default(autoincrement())
  editor                Int
  application           Int
  authorization_code    String?
  refresh_token         String?                      @unique(map: "editor_oauth_token_idx_refresh_token")
  access_token          String?                      @unique(map: "editor_oauth_token_idx_access_token")
  expire_time           DateTime                     @db.Timestamptz(6)
  scope                 Int                          @default(0)
  granted               DateTime                     @default(now()) @db.Timestamptz(6)
  code_challenge        String?
  code_challenge_method oauth_code_challenge_method?

  @@index([editor], map: "editor_oauth_token_idx_editor")
}

model editor_preference {
  id     Int    @id @default(autoincrement())
  editor Int
  name   String @db.VarChar(50)
  value  String @db.VarChar(100)

  @@unique([editor, name], map: "editor_preference_idx_editor_name")
}

model editor_subscribe_artist {
  id             Int @id @default(autoincrement())
  editor         Int
  artist         Int
  last_edit_sent Int

  @@unique([editor, artist], map: "editor_subscribe_artist_idx_uniq")
  @@index([artist], map: "editor_subscribe_artist_idx_artist")
}

model editor_subscribe_artist_deleted {
  editor     Int
  gid        String @db.Uuid
  deleted_by Int

  @@id([editor, gid])
}

model editor_subscribe_collection {
  id             Int     @id @default(autoincrement())
  editor         Int
  collection     Int
  last_edit_sent Int
  available      Boolean @default(true)
  last_seen_name String? @db.VarChar(255)

  @@unique([editor, collection], map: "editor_subscribe_collection_idx_uniq")
  @@index([collection], map: "editor_subscribe_collection_idx_collection")
}

model editor_subscribe_editor {
  id                Int @id @default(autoincrement())
  editor            Int
  subscribed_editor Int
  last_edit_sent    Int

  @@unique([editor, subscribed_editor], map: "editor_subscribe_editor_idx_uniq")
}

model editor_subscribe_label {
  id             Int @id @default(autoincrement())
  editor         Int
  label          Int
  last_edit_sent Int

  @@unique([editor, label], map: "editor_subscribe_label_idx_uniq")
  @@index([label], map: "editor_subscribe_label_idx_label")
}

model editor_subscribe_label_deleted {
  editor     Int
  gid        String @db.Uuid
  deleted_by Int

  @@id([editor, gid])
}

model editor_subscribe_series {
  id             Int @id @default(autoincrement())
  editor         Int
  series         Int
  last_edit_sent Int

  @@unique([editor, series], map: "editor_subscribe_series_idx_uniq")
  @@index([series], map: "editor_subscribe_series_idx_series")
}

model editor_subscribe_series_deleted {
  editor     Int
  gid        String @db.Uuid
  deleted_by Int

  @@id([editor, gid])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model event {
  id               Int       @id @default(autoincrement())
  gid              String    @unique(map: "event_idx_gid") @db.Uuid
  name             String    @db.VarChar
  begin_date_year  Int?      @db.SmallInt
  begin_date_month Int?      @db.SmallInt
  begin_date_day   Int?      @db.SmallInt
  end_date_year    Int?      @db.SmallInt
  end_date_month   Int?      @db.SmallInt
  end_date_day     Int?      @db.SmallInt
  time             DateTime? @db.Time(6)
  type             Int?
  cancelled        Boolean   @default(false)
  setlist          String?
  comment          String    @default("") @db.VarChar(255)
  edits_pending    Int       @default(0)
  last_updated     DateTime? @default(now()) @db.Timestamptz(6)
  ended            Boolean   @default(false)

  @@index([name], map: "event_idx_name")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model event_alias {
  id                 Int       @id @default(autoincrement())
  event              Int
  name               String    @db.VarChar
  locale             String?
  edits_pending      Int       @default(0)
  last_updated       DateTime? @default(now()) @db.Timestamptz(6)
  type               Int?
  sort_name          String    @db.VarChar
  begin_date_year    Int?      @db.SmallInt
  begin_date_month   Int?      @db.SmallInt
  begin_date_day     Int?      @db.SmallInt
  end_date_year      Int?      @db.SmallInt
  end_date_month     Int?      @db.SmallInt
  end_date_day       Int?      @db.SmallInt
  primary_for_locale Boolean   @default(false)
  ended              Boolean   @default(false)

  @@index([event], map: "event_alias_idx_event")
}

model event_alias_type {
  id          Int     @id @default(autoincrement())
  name        String
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "event_alias_type_idx_gid") @db.Uuid
}

model event_annotation {
  event      Int
  annotation Int

  @@id([event, annotation])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model event_attribute {
  id                                 Int     @id @default(autoincrement())
  event                              Int
  event_attribute_type               Int
  event_attribute_type_allowed_value Int?
  event_attribute_text               String?

  @@index([event], map: "event_attribute_idx_event")
}

model event_attribute_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  comment     String  @default("") @db.VarChar(255)
  free_text   Boolean
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "event_attribute_type_idx_gid") @db.Uuid
}

model event_attribute_type_allowed_value {
  id                   Int     @id @default(autoincrement())
  event_attribute_type Int
  value                String?
  parent               Int?
  child_order          Int     @default(0)
  description          String?
  gid                  String  @unique(map: "event_attribute_type_allowed_value_idx_gid") @db.Uuid

  @@index([event_attribute_type], map: "event_attribute_type_allowed_value_idx_name")
}

model event_gid_redirect {
  gid     String    @id @db.Uuid
  new_id  Int
  created DateTime? @default(now()) @db.Timestamptz(6)

  @@index([new_id], map: "event_gid_redirect_idx_new_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model event_meta {
  id                 Int                @id
  rating             Int?               @db.SmallInt
  rating_count       Int?
  event_art_presence event_art_presence @default(absent)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model event_rating_raw {
  event  Int
  editor Int
  rating Int @db.SmallInt

  @@id([event, editor])
  @@index([editor], map: "event_rating_raw_idx_editor")
}

model event_tag {
  event        Int
  tag          Int
  count        Int
  last_updated DateTime? @default(now()) @db.Timestamptz(6)

  @@id([event, tag])
  @@index([tag], map: "event_tag_idx_tag")
}

model event_tag_raw {
  event     Int
  editor    Int
  tag       Int
  is_upvote Boolean @default(true)

  @@id([event, editor, tag])
  @@index([editor], map: "event_tag_raw_idx_editor")
  @@index([tag], map: "event_tag_raw_idx_tag")
}

model event_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "event_type_idx_gid") @db.Uuid
}

model gender {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "gender_idx_gid") @db.Uuid
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model genre {
  id            Int       @id @default(autoincrement())
  gid           String    @unique(map: "genre_idx_gid") @db.Uuid
  name          String    @db.VarChar
  comment       String    @default("") @db.VarChar(255)
  edits_pending Int       @default(0)
  last_updated  DateTime? @default(now()) @db.Timestamptz(6)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model genre_alias {
  id                 Int       @id @default(autoincrement())
  genre              Int
  name               String    @db.VarChar
  locale             String?
  edits_pending      Int       @default(0)
  last_updated       DateTime? @default(now()) @db.Timestamptz(6)
  type               Int?
  sort_name          String    @db.VarChar
  begin_date_year    Int?      @db.SmallInt
  begin_date_month   Int?      @db.SmallInt
  begin_date_day     Int?      @db.SmallInt
  end_date_year      Int?      @db.SmallInt
  end_date_month     Int?      @db.SmallInt
  end_date_day       Int?      @db.SmallInt
  primary_for_locale Boolean   @default(false)
  ended              Boolean   @default(false)

  @@index([genre], map: "genre_alias_idx_genre")
}

model genre_alias_type {
  id          Int     @id @default(autoincrement())
  name        String
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "genre_alias_type_idx_gid") @db.Uuid
}

model genre_annotation {
  genre      Int
  annotation Int

  @@id([genre, annotation])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model instrument {
  id            Int       @id @default(autoincrement())
  gid           String    @unique(map: "instrument_idx_gid") @db.Uuid
  name          String    @db.VarChar
  type          Int?
  edits_pending Int       @default(0)
  last_updated  DateTime? @default(now()) @db.Timestamptz(6)
  comment       String    @default("") @db.VarChar(255)
  description   String    @default("")

  @@index([name], map: "instrument_idx_name")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model instrument_alias {
  id                 Int       @id @default(autoincrement())
  instrument         Int
  name               String    @db.VarChar
  locale             String?
  edits_pending      Int       @default(0)
  last_updated       DateTime? @default(now()) @db.Timestamptz(6)
  type               Int?
  sort_name          String    @db.VarChar
  begin_date_year    Int?      @db.SmallInt
  begin_date_month   Int?      @db.SmallInt
  begin_date_day     Int?      @db.SmallInt
  end_date_year      Int?      @db.SmallInt
  end_date_month     Int?      @db.SmallInt
  end_date_day       Int?      @db.SmallInt
  primary_for_locale Boolean   @default(false)
  ended              Boolean   @default(false)

  @@index([instrument], map: "instrument_alias_idx_instrument")
}

model instrument_alias_type {
  id          Int     @id @default(autoincrement())
  name        String
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "instrument_alias_type_idx_gid") @db.Uuid
}

model instrument_annotation {
  instrument Int
  annotation Int

  @@id([instrument, annotation])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model instrument_attribute {
  id                                      Int     @id @default(autoincrement())
  instrument                              Int
  instrument_attribute_type               Int
  instrument_attribute_type_allowed_value Int?
  instrument_attribute_text               String?

  @@index([instrument], map: "instrument_attribute_idx_instrument")
}

model instrument_attribute_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  comment     String  @default("") @db.VarChar(255)
  free_text   Boolean
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "instrument_attribute_type_idx_gid") @db.Uuid
}

model instrument_attribute_type_allowed_value {
  id                        Int     @id @default(autoincrement())
  instrument_attribute_type Int
  value                     String?
  parent                    Int?
  child_order               Int     @default(0)
  description               String?
  gid                       String  @unique(map: "instrument_attribute_type_allowed_value_idx_gid") @db.Uuid

  @@index([instrument_attribute_type], map: "instrument_attribute_type_allowed_value_idx_name")
}

model instrument_gid_redirect {
  gid     String    @id @db.Uuid
  new_id  Int
  created DateTime? @default(now()) @db.Timestamptz(6)

  @@index([new_id], map: "instrument_gid_redirect_idx_new_id")
}

model instrument_tag {
  instrument   Int
  tag          Int
  count        Int
  last_updated DateTime? @default(now()) @db.Timestamptz(6)

  @@id([instrument, tag])
  @@index([tag], map: "instrument_tag_idx_tag")
}

model instrument_tag_raw {
  instrument Int
  editor     Int
  tag        Int
  is_upvote  Boolean @default(true)

  @@id([instrument, editor, tag])
  @@index([editor], map: "instrument_tag_raw_idx_editor")
  @@index([instrument], map: "instrument_tag_raw_idx_instrument")
  @@index([tag], map: "instrument_tag_raw_idx_tag")
}

model instrument_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "instrument_type_idx_gid") @db.Uuid
}

model iso_3166_1 {
  area Int
  code String @id @db.Char(2)

  @@index([area], map: "iso_3166_1_idx_area")
}

model iso_3166_2 {
  area Int
  code String @id @db.VarChar(10)

  @@index([area], map: "iso_3166_2_idx_area")
}

model iso_3166_3 {
  area Int
  code String @id @db.Char(4)

  @@index([area], map: "iso_3166_3_idx_area")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model isrc {
  id            Int       @id @default(autoincrement())
  recording     Int
  isrc          String    @db.Char(12)
  source        Int?      @db.SmallInt
  edits_pending Int       @default(0)
  created       DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([isrc, recording], map: "isrc_idx_isrc_recording")
  @@index([isrc], map: "isrc_idx_isrc")
  @@index([recording], map: "isrc_idx_recording")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model iswc {
  id            Int      @id @default(autoincrement())
  work          Int
  iswc          String?  @db.Char(15)
  source        Int?     @db.SmallInt
  edits_pending Int      @default(0)
  created       DateTime @default(now()) @db.Timestamptz(6)

  @@unique([iswc, work], map: "iswc_idx_iswc")
  @@index([work], map: "iswc_idx_work")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_area_area {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_area_area_idx_uniq")
  @@index([entity1], map: "l_area_area_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_area_artist {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_area_artist_idx_uniq")
  @@index([entity1], map: "l_area_artist_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_area_event {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_area_event_idx_uniq")
  @@index([entity1], map: "l_area_event_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_area_genre {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_area_genre_idx_uniq")
  @@index([entity1], map: "l_area_genre_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_area_instrument {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_area_instrument_idx_uniq")
  @@index([entity1], map: "l_area_instrument_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_area_label {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_area_label_idx_uniq")
  @@index([entity1], map: "l_area_label_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_area_mood {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_area_mood_idx_uniq")
  @@index([entity1], map: "l_area_mood_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_area_place {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_area_place_idx_uniq")
  @@index([entity1], map: "l_area_place_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_area_recording {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_area_recording_idx_uniq")
  @@index([entity1], map: "l_area_recording_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_area_release {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_area_release_idx_uniq")
  @@index([entity1], map: "l_area_release_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_area_release_group {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_area_release_group_idx_uniq")
  @@index([entity1], map: "l_area_release_group_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_area_series {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_area_series_idx_uniq")
  @@index([entity1], map: "l_area_series_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_area_url {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_area_url_idx_uniq")
  @@index([entity1], map: "l_area_url_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_area_work {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_area_work_idx_uniq")
  @@index([entity1], map: "l_area_work_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_artist_artist {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_artist_artist_idx_uniq")
  @@index([entity1], map: "l_artist_artist_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_artist_event {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_artist_event_idx_uniq")
  @@index([entity1], map: "l_artist_event_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_artist_genre {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_artist_genre_idx_uniq")
  @@index([entity1], map: "l_artist_genre_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_artist_instrument {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_artist_instrument_idx_uniq")
  @@index([entity1], map: "l_artist_instrument_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_artist_label {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_artist_label_idx_uniq")
  @@index([entity1], map: "l_artist_label_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_artist_mood {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_artist_mood_idx_uniq")
  @@index([entity1], map: "l_artist_mood_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_artist_place {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_artist_place_idx_uniq")
  @@index([entity1], map: "l_artist_place_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_artist_recording {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_artist_recording_idx_uniq")
  @@index([entity1], map: "l_artist_recording_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_artist_release {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_artist_release_idx_uniq")
  @@index([entity1], map: "l_artist_release_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_artist_release_group {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_artist_release_group_idx_uniq")
  @@index([entity1], map: "l_artist_release_group_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_artist_series {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_artist_series_idx_uniq")
  @@index([entity1], map: "l_artist_series_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_artist_url {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_artist_url_idx_uniq")
  @@index([entity1], map: "l_artist_url_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_artist_work {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_artist_work_idx_uniq")
  @@index([entity1], map: "l_artist_work_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_event_event {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_event_event_idx_uniq")
  @@index([entity1], map: "l_event_event_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_event_genre {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_event_genre_idx_uniq")
  @@index([entity1], map: "l_event_genre_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_event_instrument {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_event_instrument_idx_uniq")
  @@index([entity1], map: "l_event_instrument_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_event_label {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_event_label_idx_uniq")
  @@index([entity1], map: "l_event_label_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_event_mood {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_event_mood_idx_uniq")
  @@index([entity1], map: "l_event_mood_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_event_place {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_event_place_idx_uniq")
  @@index([entity1], map: "l_event_place_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_event_recording {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_event_recording_idx_uniq")
  @@index([entity1], map: "l_event_recording_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_event_release {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_event_release_idx_uniq")
  @@index([entity1], map: "l_event_release_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_event_release_group {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_event_release_group_idx_uniq")
  @@index([entity1], map: "l_event_release_group_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_event_series {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_event_series_idx_uniq")
  @@index([entity1], map: "l_event_series_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_event_url {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_event_url_idx_uniq")
  @@index([entity1], map: "l_event_url_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_event_work {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_event_work_idx_uniq")
  @@index([entity1], map: "l_event_work_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_genre_genre {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_genre_genre_idx_uniq")
  @@index([entity1], map: "l_genre_genre_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_genre_instrument {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_genre_instrument_idx_uniq")
  @@index([entity1], map: "l_genre_instrument_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_genre_label {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_genre_label_idx_uniq")
  @@index([entity1], map: "l_genre_label_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_genre_mood {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_genre_mood_idx_uniq")
  @@index([entity1], map: "l_genre_mood_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_genre_place {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_genre_place_idx_uniq")
  @@index([entity1], map: "l_genre_place_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_genre_recording {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_genre_recording_idx_uniq")
  @@index([entity1], map: "l_genre_recording_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_genre_release {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_genre_release_idx_uniq")
  @@index([entity1], map: "l_genre_release_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_genre_release_group {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_genre_release_group_idx_uniq")
  @@index([entity1], map: "l_genre_release_group_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_genre_series {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_genre_series_idx_uniq")
  @@index([entity1], map: "l_genre_series_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_genre_url {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_genre_url_idx_uniq")
  @@index([entity1], map: "l_genre_url_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_genre_work {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_genre_work_idx_uniq")
  @@index([entity1], map: "l_genre_work_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_instrument_instrument {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_instrument_instrument_idx_uniq")
  @@index([entity1], map: "l_instrument_instrument_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_instrument_label {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_instrument_label_idx_uniq")
  @@index([entity1], map: "l_instrument_label_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_instrument_mood {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_instrument_mood_idx_uniq")
  @@index([entity1], map: "l_instrument_mood_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_instrument_place {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_instrument_place_idx_uniq")
  @@index([entity1], map: "l_instrument_place_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_instrument_recording {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_instrument_recording_idx_uniq")
  @@index([entity1], map: "l_instrument_recording_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_instrument_release {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_instrument_release_idx_uniq")
  @@index([entity1], map: "l_instrument_release_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_instrument_release_group {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_instrument_release_group_idx_uniq")
  @@index([entity1], map: "l_instrument_release_group_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_instrument_series {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_instrument_series_idx_uniq")
  @@index([entity1], map: "l_instrument_series_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_instrument_url {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_instrument_url_idx_uniq")
  @@index([entity1], map: "l_instrument_url_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_instrument_work {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_instrument_work_idx_uniq")
  @@index([entity1], map: "l_instrument_work_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_label_label {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_label_label_idx_uniq")
  @@index([entity1], map: "l_label_label_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_label_mood {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_label_mood_idx_uniq")
  @@index([entity1], map: "l_label_mood_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_label_place {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_label_place_idx_uniq")
  @@index([entity1], map: "l_label_place_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_label_recording {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_label_recording_idx_uniq")
  @@index([entity1], map: "l_label_recording_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_label_release {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_label_release_idx_uniq")
  @@index([entity1], map: "l_label_release_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_label_release_group {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_label_release_group_idx_uniq")
  @@index([entity1], map: "l_label_release_group_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_label_series {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_label_series_idx_uniq")
  @@index([entity1], map: "l_label_series_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_label_url {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_label_url_idx_uniq")
  @@index([entity1], map: "l_label_url_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_label_work {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_label_work_idx_uniq")
  @@index([entity1], map: "l_label_work_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_mood_mood {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_mood_mood_idx_uniq")
  @@index([entity1], map: "l_mood_mood_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_mood_place {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_mood_place_idx_uniq")
  @@index([entity1], map: "l_mood_place_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_mood_recording {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_mood_recording_idx_uniq")
  @@index([entity1], map: "l_mood_recording_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_mood_release {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_mood_release_idx_uniq")
  @@index([entity1], map: "l_mood_release_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_mood_release_group {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_mood_release_group_idx_uniq")
  @@index([entity1], map: "l_mood_release_group_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_mood_series {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_mood_series_idx_uniq")
  @@index([entity1], map: "l_mood_series_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_mood_url {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_mood_url_idx_uniq")
  @@index([entity1], map: "l_mood_url_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_mood_work {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_mood_work_idx_uniq")
  @@index([entity1], map: "l_mood_work_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_place_place {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_place_place_idx_uniq")
  @@index([entity1], map: "l_place_place_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_place_recording {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_place_recording_idx_uniq")
  @@index([entity1], map: "l_place_recording_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_place_release {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_place_release_idx_uniq")
  @@index([entity1], map: "l_place_release_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_place_release_group {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_place_release_group_idx_uniq")
  @@index([entity1], map: "l_place_release_group_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_place_series {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_place_series_idx_uniq")
  @@index([entity1], map: "l_place_series_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_place_url {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_place_url_idx_uniq")
  @@index([entity1], map: "l_place_url_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_place_work {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_place_work_idx_uniq")
  @@index([entity1], map: "l_place_work_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_recording_recording {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_recording_recording_idx_uniq")
  @@index([entity1], map: "l_recording_recording_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_recording_release {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_recording_release_idx_uniq")
  @@index([entity1], map: "l_recording_release_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_recording_release_group {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_recording_release_group_idx_uniq")
  @@index([entity1], map: "l_recording_release_group_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_recording_series {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_recording_series_idx_uniq")
  @@index([entity1], map: "l_recording_series_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_recording_url {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_recording_url_idx_uniq")
  @@index([entity1], map: "l_recording_url_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_recording_work {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_recording_work_idx_uniq")
  @@index([entity1], map: "l_recording_work_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_release_group_release_group {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_release_group_release_group_idx_uniq")
  @@index([entity1], map: "l_release_group_release_group_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_release_group_series {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_release_group_series_idx_uniq")
  @@index([entity1], map: "l_release_group_series_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_release_group_url {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_release_group_url_idx_uniq")
  @@index([entity1], map: "l_release_group_url_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_release_group_work {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_release_group_work_idx_uniq")
  @@index([entity1], map: "l_release_group_work_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_release_release {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_release_release_idx_uniq")
  @@index([entity1], map: "l_release_release_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_release_release_group {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_release_release_group_idx_uniq")
  @@index([entity1], map: "l_release_release_group_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_release_series {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_release_series_idx_uniq")
  @@index([entity1], map: "l_release_series_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_release_url {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_release_url_idx_uniq")
  @@index([entity1], map: "l_release_url_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_release_work {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_release_work_idx_uniq")
  @@index([entity1], map: "l_release_work_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_series_series {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_series_series_idx_uniq")
  @@index([entity1], map: "l_series_series_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_series_url {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_series_url_idx_uniq")
  @@index([entity1], map: "l_series_url_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_series_work {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_series_work_idx_uniq")
  @@index([entity1], map: "l_series_work_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_url_url {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_url_url_idx_uniq")
  @@index([entity1], map: "l_url_url_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_url_work {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_url_work_idx_uniq")
  @@index([entity1], map: "l_url_work_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model l_work_work {
  id             Int       @id @default(autoincrement())
  link           Int
  entity0        Int
  entity1        Int
  edits_pending  Int       @default(0)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)
  link_order     Int       @default(0)
  entity0_credit String    @default("")
  entity1_credit String    @default("")

  @@unique([entity0, entity1, link, link_order], map: "l_work_work_idx_uniq")
  @@index([entity1], map: "l_work_work_idx_entity1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model label {
  id               Int       @id @default(autoincrement())
  gid              String    @unique(map: "label_idx_gid") @db.Uuid
  name             String    @db.VarChar
  begin_date_year  Int?      @db.SmallInt
  begin_date_month Int?      @db.SmallInt
  begin_date_day   Int?      @db.SmallInt
  end_date_year    Int?      @db.SmallInt
  end_date_month   Int?      @db.SmallInt
  end_date_day     Int?      @db.SmallInt
  label_code       Int?
  type             Int?
  area             Int?
  comment          String    @default("") @db.VarChar(255)
  edits_pending    Int       @default(0)
  last_updated     DateTime? @default(now()) @db.Timestamptz(6)
  ended            Boolean   @default(false)

  @@index([area], map: "label_idx_area")
  @@index([name], map: "label_idx_musicbrainz_collate")
  @@index([name], map: "label_idx_name")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model label_alias {
  id                 Int       @id @default(autoincrement())
  label              Int
  name               String    @db.VarChar
  locale             String?
  edits_pending      Int       @default(0)
  last_updated       DateTime? @default(now()) @db.Timestamptz(6)
  type               Int?
  sort_name          String    @db.VarChar
  begin_date_year    Int?      @db.SmallInt
  begin_date_month   Int?      @db.SmallInt
  begin_date_day     Int?      @db.SmallInt
  end_date_year      Int?      @db.SmallInt
  end_date_month     Int?      @db.SmallInt
  end_date_day       Int?      @db.SmallInt
  primary_for_locale Boolean   @default(false)
  ended              Boolean   @default(false)

  @@index([label], map: "label_alias_idx_label")
}

model label_alias_type {
  id          Int     @id @default(autoincrement())
  name        String
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "label_alias_type_idx_gid") @db.Uuid
}

model label_annotation {
  label      Int
  annotation Int

  @@id([label, annotation])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model label_attribute {
  id                                 Int     @id @default(autoincrement())
  label                              Int
  label_attribute_type               Int
  label_attribute_type_allowed_value Int?
  label_attribute_text               String?

  @@index([label], map: "label_attribute_idx_label")
}

model label_attribute_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  comment     String  @default("") @db.VarChar(255)
  free_text   Boolean
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "label_attribute_type_idx_gid") @db.Uuid
}

model label_attribute_type_allowed_value {
  id                   Int     @id @default(autoincrement())
  label_attribute_type Int
  value                String?
  parent               Int?
  child_order          Int     @default(0)
  description          String?
  gid                  String  @unique(map: "label_attribute_type_allowed_value_idx_gid") @db.Uuid

  @@index([label_attribute_type], map: "label_attribute_type_allowed_value_idx_name")
}

model label_gid_redirect {
  gid     String    @id @db.Uuid
  new_id  Int
  created DateTime? @default(now()) @db.Timestamptz(6)

  @@index([new_id], map: "label_gid_redirect_idx_new_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model label_ipi {
  label         Int
  ipi           String    @db.Char(11)
  edits_pending Int       @default(0)
  created       DateTime? @default(now()) @db.Timestamptz(6)

  @@id([label, ipi])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model label_isni {
  label         Int
  isni          String    @db.Char(16)
  edits_pending Int       @default(0)
  created       DateTime? @default(now()) @db.Timestamptz(6)

  @@id([label, isni])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model label_meta {
  id           Int  @id
  rating       Int? @db.SmallInt
  rating_count Int?
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model label_rating_raw {
  label  Int
  editor Int
  rating Int @db.SmallInt

  @@id([label, editor])
  @@index([editor], map: "label_rating_raw_idx_editor")
}

model label_tag {
  label        Int
  tag          Int
  count        Int
  last_updated DateTime? @default(now()) @db.Timestamptz(6)

  @@id([label, tag])
  @@index([tag], map: "label_tag_idx_tag")
}

model label_tag_raw {
  label     Int
  editor    Int
  tag       Int
  is_upvote Boolean @default(true)

  @@id([label, editor, tag])
  @@index([editor], map: "label_tag_raw_idx_editor")
  @@index([tag], map: "label_tag_raw_idx_tag")
}

model label_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "label_type_idx_gid") @db.Uuid
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model language {
  id          Int     @id @default(autoincrement())
  iso_code_2t String? @unique(map: "language_idx_iso_code_2t") @db.Char(3)
  iso_code_2b String? @unique(map: "language_idx_iso_code_2b") @db.Char(3)
  iso_code_1  String? @unique(map: "language_idx_iso_code_1") @db.Char(2)
  name        String  @db.VarChar(100)
  frequency   Int     @default(0) @db.SmallInt
  iso_code_3  String? @unique(map: "language_idx_iso_code_3") @db.Char(3)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model link {
  id               Int       @id @default(autoincrement())
  link_type        Int
  begin_date_year  Int?      @db.SmallInt
  begin_date_month Int?      @db.SmallInt
  begin_date_day   Int?      @db.SmallInt
  end_date_year    Int?      @db.SmallInt
  end_date_month   Int?      @db.SmallInt
  end_date_day     Int?      @db.SmallInt
  attribute_count  Int       @default(0)
  created          DateTime? @default(now()) @db.Timestamptz(6)
  ended            Boolean   @default(false)

  @@index([link_type, attribute_count], map: "link_idx_type_attr")
}

model link_attribute {
  link           Int
  attribute_type Int
  created        DateTime? @default(now()) @db.Timestamptz(6)

  @@id([link, attribute_type])
}

model link_attribute_credit {
  link           Int
  attribute_type Int
  credited_as    String

  @@id([link, attribute_type])
}

model link_attribute_text_value {
  link           Int
  attribute_type Int
  text_value     String

  @@id([link, attribute_type])
}

model link_attribute_type {
  id           Int       @id @default(autoincrement())
  parent       Int?
  root         Int
  child_order  Int       @default(0)
  gid          String    @unique(map: "link_attribute_type_idx_gid") @db.Uuid
  name         String    @db.VarChar(255)
  description  String?
  last_updated DateTime? @default(now()) @db.Timestamptz(6)
}

model link_creditable_attribute_type {
  attribute_type Int @id
}

model link_text_attribute_type {
  attribute_type Int @id
}

model link_type {
  id                  Int       @id @default(autoincrement())
  parent              Int?
  child_order         Int       @default(0)
  gid                 String    @unique(map: "link_type_idx_gid") @db.Uuid
  entity_type0        String    @db.VarChar(50)
  entity_type1        String    @db.VarChar(50)
  name                String    @db.VarChar(255)
  description         String?
  link_phrase         String    @db.VarChar(255)
  reverse_link_phrase String    @db.VarChar(255)
  long_link_phrase    String    @db.VarChar(255)
  priority            Int       @default(0)
  last_updated        DateTime? @default(now()) @db.Timestamptz(6)
  is_deprecated       Boolean   @default(false)
  has_dates           Boolean   @default(true)
  entity0_cardinality Int       @default(0) @db.SmallInt
  entity1_cardinality Int       @default(0) @db.SmallInt
}

model link_type_attribute_type {
  link_type      Int
  attribute_type Int
  min            Int?      @db.SmallInt
  max            Int?      @db.SmallInt
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)

  @@id([link_type, attribute_type])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model medium {
  id            Int       @id @default(autoincrement())
  release       Int
  position      Int
  format        Int?
  name          String    @default("") @db.VarChar
  edits_pending Int       @default(0)
  last_updated  DateTime? @default(now()) @db.Timestamptz(6)
  track_count   Int       @default(0)

  @@index([track_count], map: "medium_idx_track_count")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model medium_attribute {
  id                                  Int     @id @default(autoincrement())
  medium                              Int
  medium_attribute_type               Int
  medium_attribute_type_allowed_value Int?
  medium_attribute_text               String?

  @@index([medium], map: "medium_attribute_idx_medium")
}

model medium_attribute_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  comment     String  @default("") @db.VarChar(255)
  free_text   Boolean
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "medium_attribute_type_idx_gid") @db.Uuid
}

model medium_attribute_type_allowed_format {
  medium_format         Int
  medium_attribute_type Int

  @@id([medium_format, medium_attribute_type])
}

model medium_attribute_type_allowed_value {
  id                    Int     @id @default(autoincrement())
  medium_attribute_type Int
  value                 String?
  parent                Int?
  child_order           Int     @default(0)
  description           String?
  gid                   String  @unique(map: "medium_attribute_type_allowed_value_idx_gid") @db.Uuid

  @@index([medium_attribute_type], map: "medium_attribute_type_allowed_value_idx_name")
}

model medium_attribute_type_allowed_value_allowed_format {
  medium_format                       Int
  medium_attribute_type_allowed_value Int

  @@id([medium_format, medium_attribute_type_allowed_value])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model medium_cdtoc {
  id            Int       @id @default(autoincrement())
  medium        Int
  cdtoc         Int
  edits_pending Int       @default(0)
  last_updated  DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([medium, cdtoc], map: "medium_cdtoc_idx_uniq")
  @@index([cdtoc], map: "medium_cdtoc_idx_cdtoc")
  @@index([medium], map: "medium_cdtoc_idx_medium")
}

model medium_format {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(100)
  parent      Int?
  child_order Int     @default(0)
  year        Int?    @db.SmallInt
  has_discids Boolean @default(false)
  description String?
  gid         String  @unique(map: "medium_format_idx_gid") @db.Uuid
}

model medium_index {
  medium Int                  @id
  toc    Unsupported("cube")?

  @@index([toc], map: "medium_index_idx", type: Gist)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model mood {
  id            Int       @id @default(autoincrement())
  gid           String    @unique(map: "mood_idx_gid") @db.Uuid
  name          String    @db.VarChar
  comment       String    @default("") @db.VarChar(255)
  edits_pending Int       @default(0)
  last_updated  DateTime? @default(now()) @db.Timestamptz(6)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model mood_alias {
  id                 Int       @id @default(autoincrement())
  mood               Int
  name               String    @db.VarChar
  locale             String?
  edits_pending      Int       @default(0)
  last_updated       DateTime? @default(now()) @db.Timestamptz(6)
  type               Int?
  sort_name          String    @db.VarChar
  begin_date_year    Int?      @db.SmallInt
  begin_date_month   Int?      @db.SmallInt
  begin_date_day     Int?      @db.SmallInt
  end_date_year      Int?      @db.SmallInt
  end_date_month     Int?      @db.SmallInt
  end_date_day       Int?      @db.SmallInt
  primary_for_locale Boolean   @default(false)
  ended              Boolean   @default(false)

  @@index([mood], map: "mood_alias_idx_mood")
}

model mood_alias_type {
  id          Int     @id @default(autoincrement())
  name        String
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "mood_alias_type_idx_gid") @db.Uuid
}

model mood_annotation {
  mood       Int
  annotation Int

  @@id([mood, annotation])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model old_editor_name {
  name String @db.VarChar(64)

  @@ignore
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model orderable_link_type {
  link_type Int @id
  direction Int @default(1) @db.SmallInt
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model place {
  id               Int                   @id @default(autoincrement())
  gid              String                @unique(map: "place_idx_gid") @db.Uuid
  name             String                @db.VarChar
  type             Int?
  address          String                @default("") @db.VarChar
  area             Int?
  coordinates      Unsupported("point")?
  comment          String                @default("") @db.VarChar(255)
  edits_pending    Int                   @default(0)
  last_updated     DateTime?             @default(now()) @db.Timestamptz(6)
  begin_date_year  Int?                  @db.SmallInt
  begin_date_month Int?                  @db.SmallInt
  begin_date_day   Int?                  @db.SmallInt
  end_date_year    Int?                  @db.SmallInt
  end_date_month   Int?                  @db.SmallInt
  end_date_day     Int?                  @db.SmallInt
  ended            Boolean               @default(false)

  @@index([area], map: "place_idx_area")
  @@index([name], map: "place_idx_name")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model place_alias {
  id                 Int       @id @default(autoincrement())
  place              Int
  name               String    @db.VarChar
  locale             String?
  edits_pending      Int       @default(0)
  last_updated       DateTime? @default(now()) @db.Timestamptz(6)
  type               Int?
  sort_name          String    @db.VarChar
  begin_date_year    Int?      @db.SmallInt
  begin_date_month   Int?      @db.SmallInt
  begin_date_day     Int?      @db.SmallInt
  end_date_year      Int?      @db.SmallInt
  end_date_month     Int?      @db.SmallInt
  end_date_day       Int?      @db.SmallInt
  primary_for_locale Boolean   @default(false)
  ended              Boolean   @default(false)

  @@index([place], map: "place_alias_idx_place")
}

model place_alias_type {
  id          Int     @id @default(autoincrement())
  name        String
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "place_alias_type_idx_gid") @db.Uuid
}

model place_annotation {
  place      Int
  annotation Int

  @@id([place, annotation])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model place_attribute {
  id                                 Int     @id @default(autoincrement())
  place                              Int
  place_attribute_type               Int
  place_attribute_type_allowed_value Int?
  place_attribute_text               String?

  @@index([place], map: "place_attribute_idx_place")
}

model place_attribute_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  comment     String  @default("") @db.VarChar(255)
  free_text   Boolean
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "place_attribute_type_idx_gid") @db.Uuid
}

model place_attribute_type_allowed_value {
  id                   Int     @id @default(autoincrement())
  place_attribute_type Int
  value                String?
  parent               Int?
  child_order          Int     @default(0)
  description          String?
  gid                  String  @unique(map: "place_attribute_type_allowed_value_idx_gid") @db.Uuid

  @@index([place_attribute_type], map: "place_attribute_type_allowed_value_idx_name")
}

model place_gid_redirect {
  gid     String    @id @db.Uuid
  new_id  Int
  created DateTime? @default(now()) @db.Timestamptz(6)

  @@index([new_id], map: "place_gid_redirect_idx_new_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model place_meta {
  id           Int  @id
  rating       Int? @db.SmallInt
  rating_count Int?
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model place_rating_raw {
  place  Int
  editor Int
  rating Int @db.SmallInt

  @@id([place, editor])
  @@index([editor], map: "place_rating_raw_idx_editor")
}

model place_tag {
  place        Int
  tag          Int
  count        Int
  last_updated DateTime? @default(now()) @db.Timestamptz(6)

  @@id([place, tag])
  @@index([tag], map: "place_tag_idx_tag")
}

model place_tag_raw {
  place     Int
  editor    Int
  tag       Int
  is_upvote Boolean @default(true)

  @@id([place, editor, tag])
  @@index([editor], map: "place_tag_raw_idx_editor")
  @@index([tag], map: "place_tag_raw_idx_tag")
}

model place_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "place_type_idx_gid") @db.Uuid
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model recording {
  id            Int       @id @default(autoincrement())
  gid           String    @unique(map: "recording_idx_gid") @db.Uuid
  name          String    @db.VarChar
  artist_credit Int
  length        Int?
  comment       String    @default("") @db.VarChar(255)
  edits_pending Int       @default(0)
  last_updated  DateTime? @default(now()) @db.Timestamptz(6)
  video         Boolean   @default(false)

  @@index([artist_credit], map: "recording_idx_artist_credit")
  @@index([name], map: "recording_idx_musicbrainz_collate")
  @@index([name], map: "recording_idx_name")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model recording_alias {
  id                 Int       @id @default(autoincrement())
  recording          Int
  name               String    @db.VarChar
  locale             String?
  edits_pending      Int       @default(0)
  last_updated       DateTime? @default(now()) @db.Timestamptz(6)
  type               Int?
  sort_name          String    @db.VarChar
  begin_date_year    Int?      @db.SmallInt
  begin_date_month   Int?      @db.SmallInt
  begin_date_day     Int?      @db.SmallInt
  end_date_year      Int?      @db.SmallInt
  end_date_month     Int?      @db.SmallInt
  end_date_day       Int?      @db.SmallInt
  primary_for_locale Boolean   @default(false)
  ended              Boolean   @default(false)

  @@index([recording], map: "recording_alias_idx_recording")
}

model recording_alias_type {
  id          Int     @id @default(autoincrement())
  name        String
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "recording_alias_type_idx_gid") @db.Uuid
}

model recording_annotation {
  recording  Int
  annotation Int

  @@id([recording, annotation])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model recording_attribute {
  id                                     Int     @id @default(autoincrement())
  recording                              Int
  recording_attribute_type               Int
  recording_attribute_type_allowed_value Int?
  recording_attribute_text               String?

  @@index([recording], map: "recording_attribute_idx_recording")
}

model recording_attribute_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  comment     String  @default("") @db.VarChar(255)
  free_text   Boolean
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "recording_attribute_type_idx_gid") @db.Uuid
}

model recording_attribute_type_allowed_value {
  id                       Int     @id @default(autoincrement())
  recording_attribute_type Int
  value                    String?
  parent                   Int?
  child_order              Int     @default(0)
  description              String?
  gid                      String  @unique(map: "recording_attribute_type_allowed_value_idx_gid") @db.Uuid

  @@index([recording_attribute_type], map: "recording_attribute_type_allowed_value_idx_name")
}

model recording_first_release_date {
  recording Int  @id
  year      Int? @db.SmallInt
  month     Int? @db.SmallInt
  day       Int? @db.SmallInt
}

model recording_gid_redirect {
  gid     String    @id @db.Uuid
  new_id  Int
  created DateTime? @default(now()) @db.Timestamptz(6)

  @@index([new_id], map: "recording_gid_redirect_idx_new_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model recording_meta {
  id           Int  @id
  rating       Int? @db.SmallInt
  rating_count Int?
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model recording_rating_raw {
  recording Int
  editor    Int
  rating    Int @db.SmallInt

  @@id([recording, editor])
  @@index([editor], map: "recording_rating_raw_idx_editor")
}

model recording_tag {
  recording    Int
  tag          Int
  count        Int
  last_updated DateTime? @default(now()) @db.Timestamptz(6)

  @@id([recording, tag])
  @@index([tag], map: "recording_tag_idx_tag")
}

model recording_tag_raw {
  recording Int
  editor    Int
  tag       Int
  is_upvote Boolean @default(true)

  @@id([recording, editor, tag])
  @@index([editor], map: "recording_tag_raw_idx_editor")
  @@index([tag], map: "recording_tag_raw_idx_tag")
  @@index([recording], map: "recording_tag_raw_idx_track")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model release {
  id            Int       @id @default(autoincrement())
  gid           String    @unique(map: "release_idx_gid") @db.Uuid
  name          String    @db.VarChar
  artist_credit Int
  release_group Int
  status        Int?
  packaging     Int?
  language      Int?
  script        Int?
  barcode       String?   @db.VarChar(255)
  comment       String    @default("") @db.VarChar(255)
  edits_pending Int       @default(0)
  quality       Int       @default(-1) @db.SmallInt
  last_updated  DateTime? @default(now()) @db.Timestamptz(6)

  @@index([artist_credit], map: "release_idx_artist_credit")
  @@index([name], map: "release_idx_musicbrainz_collate")
  @@index([name], map: "release_idx_name")
  @@index([release_group], map: "release_idx_release_group")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model release_alias {
  id                 Int       @id @default(autoincrement())
  release            Int
  name               String    @db.VarChar
  locale             String?
  edits_pending      Int       @default(0)
  last_updated       DateTime? @default(now()) @db.Timestamptz(6)
  type               Int?
  sort_name          String    @db.VarChar
  begin_date_year    Int?      @db.SmallInt
  begin_date_month   Int?      @db.SmallInt
  begin_date_day     Int?      @db.SmallInt
  end_date_year      Int?      @db.SmallInt
  end_date_month     Int?      @db.SmallInt
  end_date_day       Int?      @db.SmallInt
  primary_for_locale Boolean   @default(false)
  ended              Boolean   @default(false)

  @@index([release], map: "release_alias_idx_release")
}

model release_alias_type {
  id          Int     @id @default(autoincrement())
  name        String
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @db.Uuid
}

model release_annotation {
  release    Int
  annotation Int

  @@id([release, annotation])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model release_attribute {
  id                                   Int     @id @default(autoincrement())
  release                              Int
  release_attribute_type               Int
  release_attribute_type_allowed_value Int?
  release_attribute_text               String?

  @@index([release], map: "release_attribute_idx_release")
}

model release_attribute_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  comment     String  @default("") @db.VarChar(255)
  free_text   Boolean
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "release_attribute_type_idx_gid") @db.Uuid
}

model release_attribute_type_allowed_value {
  id                     Int     @id @default(autoincrement())
  release_attribute_type Int
  value                  String?
  parent                 Int?
  child_order            Int     @default(0)
  description            String?
  gid                    String  @unique(map: "release_attribute_type_allowed_value_idx_gid") @db.Uuid

  @@index([release_attribute_type], map: "release_attribute_type_allowed_value_idx_name")
}

model release_country {
  release    Int
  country    Int
  date_year  Int? @db.SmallInt
  date_month Int? @db.SmallInt
  date_day   Int? @db.SmallInt

  @@id([release, country])
  @@index([country], map: "release_country_idx_country")
}

model release_first_release_date {
  release Int  @id
  year    Int? @db.SmallInt
  month   Int? @db.SmallInt
  day     Int? @db.SmallInt
}

model release_gid_redirect {
  gid     String    @id @db.Uuid
  new_id  Int
  created DateTime? @default(now()) @db.Timestamptz(6)

  @@index([new_id], map: "release_gid_redirect_idx_new_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model release_group {
  id            Int       @id @default(autoincrement())
  gid           String    @unique(map: "release_group_idx_gid") @db.Uuid
  name          String    @db.VarChar
  artist_credit Int
  type          Int?
  comment       String    @default("") @db.VarChar(255)
  edits_pending Int       @default(0)
  last_updated  DateTime? @default(now()) @db.Timestamptz(6)

  @@index([artist_credit], map: "release_group_idx_artist_credit")
  @@index([name], map: "release_group_idx_musicbrainz_collate")
  @@index([name], map: "release_group_idx_name")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model release_group_alias {
  id                 Int       @id @default(autoincrement())
  release_group      Int
  name               String    @db.VarChar
  locale             String?
  edits_pending      Int       @default(0)
  last_updated       DateTime? @default(now()) @db.Timestamptz(6)
  type               Int?
  sort_name          String    @db.VarChar
  begin_date_year    Int?      @db.SmallInt
  begin_date_month   Int?      @db.SmallInt
  begin_date_day     Int?      @db.SmallInt
  end_date_year      Int?      @db.SmallInt
  end_date_month     Int?      @db.SmallInt
  end_date_day       Int?      @db.SmallInt
  primary_for_locale Boolean   @default(false)
  ended              Boolean   @default(false)

  @@index([release_group], map: "release_group_alias_idx_release_group")
}

model release_group_alias_type {
  id          Int     @id @default(autoincrement())
  name        String
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "release_group_alias_type_idx_gid") @db.Uuid
}

model release_group_annotation {
  release_group Int
  annotation    Int

  @@id([release_group, annotation])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model release_group_attribute {
  id                                         Int     @id @default(autoincrement())
  release_group                              Int
  release_group_attribute_type               Int
  release_group_attribute_type_allowed_value Int?
  release_group_attribute_text               String?

  @@index([release_group], map: "release_group_attribute_idx_release_group")
}

model release_group_attribute_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  comment     String  @default("") @db.VarChar(255)
  free_text   Boolean
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "release_group_attribute_type_idx_gid") @db.Uuid
}

model release_group_attribute_type_allowed_value {
  id                           Int     @id @default(autoincrement())
  release_group_attribute_type Int
  value                        String?
  parent                       Int?
  child_order                  Int     @default(0)
  description                  String?
  gid                          String  @unique(map: "release_group_attribute_type_allowed_value_idx_gid") @db.Uuid

  @@index([release_group_attribute_type], map: "release_group_attribute_type_allowed_value_idx_name")
}

model release_group_gid_redirect {
  gid     String    @id @db.Uuid
  new_id  Int
  created DateTime? @default(now()) @db.Timestamptz(6)

  @@index([new_id], map: "release_group_gid_redirect_idx_new_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model release_group_meta {
  id                       Int  @id
  release_count            Int  @default(0)
  first_release_date_year  Int? @db.SmallInt
  first_release_date_month Int? @db.SmallInt
  first_release_date_day   Int? @db.SmallInt
  rating                   Int? @db.SmallInt
  rating_count             Int?
}

model release_group_primary_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "release_group_primary_type_idx_gid") @db.Uuid
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model release_group_rating_raw {
  release_group Int
  editor        Int
  rating        Int @db.SmallInt

  @@id([release_group, editor])
  @@index([editor], map: "release_group_rating_raw_idx_editor")
}

model release_group_secondary_type {
  id          Int     @id @default(autoincrement())
  name        String
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "release_group_secondary_type_idx_gid") @db.Uuid
}

model release_group_secondary_type_join {
  release_group  Int
  secondary_type Int
  created        DateTime @default(now()) @db.Timestamptz(6)

  @@id([release_group, secondary_type])
}

model release_group_tag {
  release_group Int
  tag           Int
  count         Int
  last_updated  DateTime? @default(now()) @db.Timestamptz(6)

  @@id([release_group, tag])
  @@index([tag], map: "release_group_tag_idx_tag")
}

model release_group_tag_raw {
  release_group Int
  editor        Int
  tag           Int
  is_upvote     Boolean @default(true)

  @@id([release_group, editor, tag])
  @@index([editor], map: "release_group_tag_raw_idx_editor")
  @@index([tag], map: "release_group_tag_raw_idx_tag")
}

model release_label {
  id             Int       @id @default(autoincrement())
  release        Int
  label          Int?
  catalog_number String?   @db.VarChar(255)
  last_updated   DateTime? @default(now()) @db.Timestamptz(6)

  @@index([label], map: "release_label_idx_label")
  @@index([release], map: "release_label_idx_release")
}

model release_meta {
  id                 Int                @id
  date_added         DateTime?          @default(now()) @db.Timestamptz(6)
  info_url           String?            @db.VarChar(255)
  amazon_asin        String?            @db.VarChar(10)
  cover_art_presence cover_art_presence @default(absent)
}

model release_packaging {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "release_packaging_idx_gid") @db.Uuid
}

model release_raw {
  id            Int       @id @default(autoincrement())
  title         String    @db.VarChar(255)
  artist        String?   @db.VarChar(255)
  added         DateTime? @default(now()) @db.Timestamptz(6)
  last_modified DateTime? @default(now()) @db.Timestamptz(6)
  lookup_count  Int?      @default(0)
  modify_count  Int?      @default(0)
  source        Int?      @default(0)
  barcode       String?   @db.VarChar(255)
  comment       String    @default("") @db.VarChar(255)
}

model release_status {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "release_status_idx_gid") @db.Uuid
}

model release_tag {
  release      Int
  tag          Int
  count        Int
  last_updated DateTime? @default(now()) @db.Timestamptz(6)

  @@id([release, tag])
  @@index([tag], map: "release_tag_idx_tag")
}

model release_tag_raw {
  release   Int
  editor    Int
  tag       Int
  is_upvote Boolean @default(true)

  @@id([release, editor, tag])
  @@index([editor], map: "release_tag_raw_idx_editor")
  @@index([tag], map: "release_tag_raw_idx_tag")
}

model release_unknown_country {
  release    Int  @id
  date_year  Int? @db.SmallInt
  date_month Int? @db.SmallInt
  date_day   Int? @db.SmallInt
}

model replication_control {
  id                           Int       @id @default(autoincrement())
  current_schema_sequence      Int
  current_replication_sequence Int?
  last_replication_date        DateTime? @db.Timestamptz(6)
}

model script {
  id         Int    @id @default(autoincrement())
  iso_code   String @unique(map: "script_idx_iso_code") @db.Char(4)
  iso_number String @db.Char(3)
  name       String @db.VarChar(100)
  frequency  Int    @default(0) @db.SmallInt
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model series {
  id            Int       @id @default(autoincrement())
  gid           String    @unique(map: "series_idx_gid") @db.Uuid
  name          String    @db.VarChar
  comment       String    @default("") @db.VarChar(255)
  type          Int
  ordering_type Int
  edits_pending Int       @default(0)
  last_updated  DateTime? @default(now()) @db.Timestamptz(6)

  @@index([name], map: "series_idx_name")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model series_alias {
  id                 Int       @id @default(autoincrement())
  series             Int
  name               String    @db.VarChar
  locale             String?
  edits_pending      Int       @default(0)
  last_updated       DateTime? @default(now()) @db.Timestamptz(6)
  type               Int?
  sort_name          String    @db.VarChar
  begin_date_year    Int?      @db.SmallInt
  begin_date_month   Int?      @db.SmallInt
  begin_date_day     Int?      @db.SmallInt
  end_date_year      Int?      @db.SmallInt
  end_date_month     Int?      @db.SmallInt
  end_date_day       Int?      @db.SmallInt
  primary_for_locale Boolean   @default(false)
  ended              Boolean   @default(false)

  @@index([series], map: "series_alias_idx_series")
}

model series_alias_type {
  id          Int     @id @default(autoincrement())
  name        String
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "series_alias_type_idx_gid") @db.Uuid
}

model series_annotation {
  series     Int
  annotation Int

  @@id([series, annotation])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model series_attribute {
  id                                  Int     @id @default(autoincrement())
  series                              Int
  series_attribute_type               Int
  series_attribute_type_allowed_value Int?
  series_attribute_text               String?

  @@index([series], map: "series_attribute_idx_series")
}

model series_attribute_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  comment     String  @default("") @db.VarChar(255)
  free_text   Boolean
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "series_attribute_type_idx_gid") @db.Uuid
}

model series_attribute_type_allowed_value {
  id                    Int     @id @default(autoincrement())
  series_attribute_type Int
  value                 String?
  parent                Int?
  child_order           Int     @default(0)
  description           String?
  gid                   String  @unique(map: "series_attribute_type_allowed_value_idx_gid") @db.Uuid

  @@index([series_attribute_type], map: "series_attribute_type_allowed_value_idx_name")
}

model series_gid_redirect {
  gid     String    @id @db.Uuid
  new_id  Int
  created DateTime? @default(now()) @db.Timestamptz(6)

  @@index([new_id], map: "series_gid_redirect_idx_new_id")
}

model series_ordering_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "series_ordering_type_idx_gid") @db.Uuid
}

model series_tag {
  series       Int
  tag          Int
  count        Int
  last_updated DateTime? @default(now()) @db.Timestamptz(6)

  @@id([series, tag])
  @@index([tag], map: "series_tag_idx_tag")
}

model series_tag_raw {
  series    Int
  editor    Int
  tag       Int
  is_upvote Boolean @default(true)

  @@id([series, editor, tag])
  @@index([editor], map: "series_tag_raw_idx_editor")
  @@index([series], map: "series_tag_raw_idx_series")
  @@index([tag], map: "series_tag_raw_idx_tag")
}

model series_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  entity_type String  @db.VarChar(50)
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "series_type_idx_gid") @db.Uuid
}

model tag {
  id        Int    @id @default(autoincrement())
  name      String @unique(map: "tag_idx_name") @db.VarChar(255)
  ref_count Int    @default(0)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model tag_relation {
  tag1         Int
  tag2         Int
  weight       Int
  last_updated DateTime? @default(now()) @db.Timestamptz(6)

  @@id([tag1, tag2])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model track {
  id            Int       @id @default(autoincrement())
  gid           String    @unique(map: "track_idx_gid") @db.Uuid
  recording     Int
  medium        Int
  position      Int
  number        String
  name          String    @db.VarChar
  artist_credit Int
  length        Int?
  edits_pending Int       @default(0)
  last_updated  DateTime? @default(now()) @db.Timestamptz(6)
  is_data_track Boolean   @default(false)

  @@index([artist_credit], map: "track_idx_artist_credit")
  @@index([recording], map: "track_idx_recording")
}

model track_gid_redirect {
  gid     String    @id @db.Uuid
  new_id  Int
  created DateTime? @default(now()) @db.Timestamptz(6)

  @@index([new_id], map: "track_gid_redirect_idx_new_id")
}

model track_raw {
  id       Int     @id @default(autoincrement())
  release  Int
  title    String  @db.VarChar(255)
  artist   String? @db.VarChar(255)
  sequence Int

  @@index([release], map: "track_raw_idx_release")
}

model unreferenced_row_log {
  table_name String    @db.VarChar
  row_id     Int
  inserted   DateTime? @default(now()) @db.Timestamptz(6)

  @@id([table_name, row_id])
  @@index([inserted], map: "unreferenced_row_log_idx_inserted", type: Brin)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model url {
  id            Int       @id @default(autoincrement())
  gid           String    @unique(map: "url_idx_gid") @db.Uuid
  url           String    @unique(map: "url_idx_url")
  edits_pending Int       @default(0)
  last_updated  DateTime? @default(now()) @db.Timestamptz(6)
}

model url_gid_redirect {
  gid     String    @id @db.Uuid
  new_id  Int
  created DateTime? @default(now()) @db.Timestamptz(6)

  @@index([new_id], map: "url_gid_redirect_idx_new_id")
}

model vote {
  id         Int       @id @default(autoincrement())
  editor     Int
  edit       Int
  vote       Int       @db.SmallInt
  vote_time  DateTime? @default(now()) @db.Timestamptz(6)
  superseded Boolean   @default(false)

  @@index([edit], map: "vote_idx_edit")
  @@index([editor, vote_time], map: "vote_idx_editor_vote_time")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model work {
  id            Int       @id @default(autoincrement())
  gid           String    @unique(map: "work_idx_gid") @db.Uuid
  name          String    @db.VarChar
  type          Int?
  comment       String    @default("") @db.VarChar(255)
  edits_pending Int       @default(0)
  last_updated  DateTime? @default(now()) @db.Timestamptz(6)

  @@index([name], map: "work_idx_musicbrainz_collate")
  @@index([name], map: "work_idx_name")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model work_alias {
  id                 Int       @id @default(autoincrement())
  work               Int
  name               String    @db.VarChar
  locale             String?
  edits_pending      Int       @default(0)
  last_updated       DateTime? @default(now()) @db.Timestamptz(6)
  type               Int?
  sort_name          String    @db.VarChar
  begin_date_year    Int?      @db.SmallInt
  begin_date_month   Int?      @db.SmallInt
  begin_date_day     Int?      @db.SmallInt
  end_date_year      Int?      @db.SmallInt
  end_date_month     Int?      @db.SmallInt
  end_date_day       Int?      @db.SmallInt
  primary_for_locale Boolean   @default(false)
  ended              Boolean   @default(false)

  @@index([work], map: "work_alias_idx_work")
}

model work_alias_type {
  id          Int     @id @default(autoincrement())
  name        String
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "work_alias_type_idx_gid") @db.Uuid
}

model work_annotation {
  work       Int
  annotation Int

  @@id([work, annotation])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model work_attribute {
  id                                Int     @id @default(autoincrement())
  work                              Int
  work_attribute_type               Int
  work_attribute_type_allowed_value Int?
  work_attribute_text               String?

  @@index([work], map: "work_attribute_idx_work")
}

model work_attribute_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  comment     String  @default("") @db.VarChar(255)
  free_text   Boolean
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "work_attribute_type_idx_gid") @db.Uuid
}

model work_attribute_type_allowed_value {
  id                  Int     @id @default(autoincrement())
  work_attribute_type Int
  value               String?
  parent              Int?
  child_order         Int     @default(0)
  description         String?
  gid                 String  @unique(map: "work_attribute_type_allowed_value_idx_gid") @db.Uuid

  @@index([work_attribute_type], map: "work_attribute_type_allowed_value_idx_name")
}

model work_gid_redirect {
  gid     String    @id @db.Uuid
  new_id  Int
  created DateTime? @default(now()) @db.Timestamptz(6)

  @@index([new_id], map: "work_gid_redirect_idx_new_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model work_language {
  work          Int
  language      Int
  edits_pending Int       @default(0)
  created       DateTime? @default(now()) @db.Timestamptz(6)

  @@id([work, language])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model work_meta {
  id           Int  @id
  rating       Int? @db.SmallInt
  rating_count Int?
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model work_rating_raw {
  work   Int
  editor Int
  rating Int @db.SmallInt

  @@id([work, editor])
}

model work_tag {
  work         Int
  tag          Int
  count        Int
  last_updated DateTime? @default(now()) @db.Timestamptz(6)

  @@id([work, tag])
  @@index([tag], map: "work_tag_idx_tag")
}

model work_tag_raw {
  work      Int
  editor    Int
  tag       Int
  is_upvote Boolean @default(true)

  @@id([work, editor, tag])
  @@index([tag], map: "work_tag_raw_idx_tag")
}

model work_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  parent      Int?
  child_order Int     @default(0)
  description String?
  gid         String  @unique(map: "work_type_idx_gid") @db.Uuid
}

enum cover_art_presence {
  absent
  present
  darkened
}

enum edit_note_status {
  deleted
  edited
}

enum event_art_presence {
  absent
  present
  darkened
}

enum fluency {
  basic
  intermediate
  advanced
  native
}

enum oauth_code_challenge_method {
  plain
  S256
}

enum ratable_entity_type {
  artist
  event
  label
  place
  recording
  release_group
  work
}

enum taggable_entity_type {
  area
  artist
  event
  instrument
  label
  place
  recording
  release
  release_group
  series
  work
}
